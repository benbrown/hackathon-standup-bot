# HelpCard
[Activity
    Attachments = @{json(HelpCardJson())}
]

# HelpCardJson
-```
{
    "type": "AdaptiveCard",
    "version": "1.0",
    "body": [
        {
            "type": "Container",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Commands",
                    "size": "Large",
                    "weight": "Bolder"
                }
            ],
            "id": "TitleContainer"
        },
        {
            "type": "Container",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Start",
                    "color": "Accent",
                    "size": "Medium",
                    "weight": "Bolder"
                },
                {
                    "type": "TextBlock",
                    "text": "Say **start** to trigger an ad-hoc stand-up in a channel. When a member selects **Begin My Stand-up** I'll initiate a 1:1 asking the following questions:\\n\\n\\n\\n* What you worked on yesterday?\\n* What you are working on today?\\n* Any blockers?\\n\\nThen I'll report back in the thread the message thread the stand-up started in.",
                    "wrap": true
                }
            ]
        },
        {
            "type": "Container",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Schedule",
                    "color": "Accent",
                    "weight": "Bolder",
                    "size": "Medium"
                },
                {
                    "type": "TextBlock",
                    "text": "Say **schedule** to set up a recurring daily stand-up in a channel.",
                    "wrap": true
                }
            ]
        },
        {
            "type": "Container",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Formatting your responses",
                    "size": "Large",
                    "weight": "Bolder"
                },
                {
                    "type": "TextBlock",
                    "text": "Due to constraints, use the following when we have a 1:1."
                },
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items":[]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "âœ…Do",
                                    "size": "Medium",
                                    "weight": "Bolder"
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "â›”Don't",
                                    "size": "Medium",
                                    "weight": "Bolder"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Lists",
                                    "size": "Medium",
                                    "weight": "Bolder"
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Separate lists with new lines without special formatting, like:\\n\\n\\n\\n\\nItem1\\n\\nItem2\\n\\nItem3",
                                    "wrap": true
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Avoid bulleted or numbered lists. They are processed on a single line and difficult to read.",
                                    "wrap": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Attach URLs",
                                    "weight": "Bolder",
                                    "size": "Medium"
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Paste it as a normal link, like:\\n\\n\\n\\nhttps://contoso.com/",
                                    "wrap": true
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Don't format a link through the composer. I can only read the display text.",
                                    "wrap": true
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Express yourself",
                                    "size": "Medium",
                                    "weight": "Bolder"
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Use emojis! ðŸŒŸ"
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Don't send reactions like emoticons or GIFs from the composer. They won't show up.",
                                    "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "Container",
            "items": [
                {
                    "type": "ActionSet",
                    "actions": [
                        {
                            "type": "Action.OpenUrl",
                            "title": "View known issues",
                            "url": "https://github.com/benbrown/hackathon-standup-bot/issues"
                        },
                        {
                            "type": "Action.OpenUrl",
                            "title": "File a new issue",
                            "url": "https://github.com/benbrown/hackathon-standup-bot/issues/new"
                        }
                    ],
                    "horizontalAlignment": "Center",
                    "separator": true
                }
            ]
        }
    ],
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json"
}
```

# Error
- The bot encountered an error or bug. To continue to run this bot, please fix the bot source code.

# BeginStandupUsage
- To begin a stand-up, say @standup begin inside a Team chat. I cannot start a new stand-up from inside a 1:1 chat.
- To begin a stand-up, say @standup start inside a Team chat. I'm unable to start a new stand-up via a 1:1 chat.

# BeginStandup
- Hey @{user}. This is the stand-up for @{teamName} / @{channelName}. Let's get started!

#  WorkingOnPastPrompt
- What have you been working on since yesterday?
- What have you been working on since last stand-up?
- What have you worked on since the last stand-up?

# WorkingOnNextPrompt
- What are you working on today?
- What will you be working on til our next stand-up?

# BlockerPrompt
- Is there anything blocking your progress?
- Are there any blockers?

# ThankUserForCompletion
- Thanks for taking the time to respond!

# PrepareStandUpCard
[Activity
    Attachments = @{json(PrepareStandUpCardJson())}
]

# PrepareStandUpCardJson
-```
{
    "type": "AdaptiveCard",
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "id": "PrepareStandUp",
    "version": "1.0",
    "body": [
        {
            "type": "TextBlock",
            "text": "Preparing a new stand-up meeting..."
        }
    ]
}
```

# StartStandUpCard
[Activity
    Attachments = @{json(StartStandUpCardJson())}
]

# StartStandUpCardJson
-```
{
    "type": "AdaptiveCard",
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "id": "StartStandUp",
    "version": "1.0",
    "body": [
        {
            "type": "TextBlock",
            "text": "It's time for a stand-up! Click the button below to start yours.",
            "wrap": true
        },
        {
            "type": "ActionSet",
            "actions": [
                {
                    "type": "Action.Submit",
                    "title": "Begin My Stand-up",
                    "id": "begin",
                    "data": {
                        "command": "begin"
                    }
                }
            ],
            "horizontalAlignment": "Center"
        }
    ]
}
```

# ActiveMeetingCard
[Activity
    Attachments = @{json(ActiveMeetingCardJson())}
]


# ActiveMeetingCardJson
-```
{
    "type": "AdaptiveCard",
    "version": "1.0",
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "id": "SummaryCard",
    "body": [
        {
            "type": "TextBlock",
            "text": "It's time for a stand-up! Click the button below to start yours.",
            "wrap": true
        },
        {
            "type": "ActionSet",
            "actions": [
                {
                    "type": "Action.Submit",
                    "title": "Begin My Stand-up",
                    "id": "begin",
                    "data": {
                        "command": "begin"
                    }
                }
            ],
            "horizontalAlignment": "Center"
        },
        {
            "id": "TitleContainer",
            "type": "Container",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Stand-up for @{formatDateTime(startTime,'MMM d')}",
                    "size": "Large",
                    "wrap": true,
                    "weight": "Bolder"
                }
            ]
        },
        {
            "id": "QuestionsContainer",
            "type": "Container",
            "separator": true,
            "items": [
                @{QuestionContainerCard(questions)}
            ]
        }
    ]
}
```

# CompletedMeetingCard
[Activity
    Attachments = @{json(CompletedMeetingCardJson())}
]


# CompletedMeetingCardJson
-```
{
    "type": "AdaptiveCard",
    "version": "1.0",
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "id": "SummaryCard",
    "body": [
        {
            "id": "TitleContainer",
            "type": "Container",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Stand-up for @{formatDateTime(startTime,'MMM d')}",
                    "size": "Large",
                    "wrap": true,
                    "weight": "Bolder"
                }
            ]
        },
        {
            "id": "QuestionsContainer",
            "type": "Container",
            "separator": true,
            "items": [
                @{QuestionContainerCard(questions)}
            ]
        }
    ]
}
```

# QuestionContainerCard(questions)
- @{join(foreach(questions, x, QuestionCard(x)), ', ')}

# QuestionCard(question)
-```
{
    "type": "Container",
    "items": [
        {
            "type": "TextBlock",
            "text": "@{question.text}",
            "size": "Large",
            "color": "Accent",
            "weight": "Bolder"
        },
        {
            "type": "Container",
            "items": [
                @{ParticipantsContainerCard(question.participants)}
            ]
        }
    ]
}
```

# ParticipantsContainerCard(participants)
- @{join(foreach(participants, x, ParticipantsCard(x)), ', ')}

# ParticipantsCard(participant)
-```
{
    "type": "TextBlock",
    "text": "@{participant.name}",
    "size": "Medium",
    "weight": "Bolder"
},
{
    "type": "TextBlock",
    "text": "@{participant.response}",
    "wrap": true
}
```

# ScheduleCard
[Activity
    Attachments = @{json(ScheduleCardJson())}
]

# ScheduleCardJson
-```
{
    "type": "AdaptiveCard",
    "body": [
        {
            "type": "Container",
            "items": [
                {
                    "type": "TextBlock",
                    "text": "Schedule",
                    "size": "Large",
                    "weight": "Bolder"
                }
            ]
        },
        {
            "type": "Container",
            "items": [
                {
                    "type": "Container",
                    "items": [
                        {
                            "type": "TextBlock",
                            "text": "Choose day(s)",
                            "color": "Accent",
                            "weight": "Bolder",
                            "size": "Large"
                        },
                        {
                            "type": "Input.Toggle",
                            "title": "Monday",
                            "value": "@{ schedule.Monday }",
                            "wrap": false,
                            "id": "Monday"
                        },
                        {
                            "type": "Input.Toggle",
                            "title": "Tuesday",
                            "value": "@{ schedule.Tuesday }",
                            "wrap": false,
                            "id": "Tuesday"
                        },
                        {
                            "type": "Input.Toggle",
                            "title": "Wednesday",
                            "value": "@{ schedule.Wednesday }",
                            "wrap": false,
                            "id": "Wednesday"
                        },
                        {
                            "type": "Input.Toggle",
                            "title": "Thursday",
                            "value": "@{ schedule.Thursday }",
                            "wrap": false,
                            "id": "Thursday"
                        },
                        {
                            "type": "Input.Toggle",
                            "title": "Friday",
                            "value": "@{ schedule.Friday }",
                            "wrap": false,
                            "id": "Friday"
                        }
                    ]
                },
                {
                    "type": "Input.Toggle",
                    "title": "Saturday",
                    "value": "@{ schedule.Saturday }",
                    "wrap": false,
                    "id": "Saturday"
                },
                {
                    "type": "Input.Toggle",
                    "title": "Sunday",
                    "value": "@{ schedule.Sunday }",
                    "wrap": false,
                    "id": "Sunday"
                },
                {
                    "type": "TextBlock",
                    "text": "Set time",
                    "size": "Large",
                    "weight": "Bolder",
                    "color": "Accent"
                },
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "Input.Time",
                                    "id": "MeetingTime",
                                    "value": "@{ schedule.MeetingTime }"
                                }
                            ]
                        },
                        {
                            "type": "Column",
                            "width": "stretch",
                            "items": [
                                {
                                    "type": "Input.ChoiceSet",
                                    "placeholder": "Pacific Standard Time",
                                    "choices": [
                                        {
                                            "title": "Eastern Standard Time",
                                            "value": "GMT-5"
                                        },
                                        {
                                            "title": "Central Standard Time",
                                            "value": "GMT-6"
                                        },
                                        {
                                            "title": "Mountain Standard Time",
                                            "value": "GMT-7"
                                        },
                                        {
                                            "title": "Pacific Standard Time",
                                            "value": "GMT-8"
                                        },
                                        {
                                            "title": "Alaska Standard Time",
                                            "value": "GMT-9"
                                        },
                                        {
                                            "title": "Hawaii-Aleutian Standard Time",
                                            "value": "GMT-10"
                                        }
                                    ],
                                    "id": "Timezone"
                                }
                            ]
                        }
                    ]
                }
            ],
            "separator": true
        },
        {
            "type": "ActionSet",
            "actions": [
                {
                    "type": "Action.Submit",
                    "title": "Save",
                    "id": "Save"
                }
            ]
        }
    ],
    "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
    "version": "1.0",
    "id": "ScheduleCard"
}
```